<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Variables

waveNumber = 0
timeBeforeFirstWave = 2 * room_speed; //1 sec delay for first char
timeBetweenWave = 20 * room_speed;
timeOfWave = 60 * room_speed;
timeBetweenMonsters = 5 * room_speed;

waveOn = false;
alarm[0] = timeBeforeFirstWave;
numerOfWindows = instance_number(Window);

ajustCenterOfEnemy = 32;
//set seed
randomize();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End of wave
waveOn = false;
alarm[0] = timeBetweenWave;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///New Monster
if(waveOn) {
    var windowNumber = random_range(1,numerOfWindows);
    var windowObjec = instance_find(Window,windowNumber);
    var xAdjust = 0;
    var yAdjust = 0;
    var sprite = noone;
    
    if(windowObjec.image_angle == 0) {
        yAdjust += ajustCenterOfEnemy;
        sprite = sPeasantFront;
    } else if (windowObjec.image_angle == 90) {
        xAdjust += ajustCenterOfEnemy;
        sprite = sPeasantRight;
    } else if (windowObjec.image_angle == 180) {
        yAdjust -= 1.5 * ajustCenterOfEnemy; //correction position
        sprite = sPeasantBack;
    } else if (windowObjec.image_angle == 270) {
        xAdjust -= ajustCenterOfEnemy;
        sprite = sPeasantLeft;
    }
    
    with(instance_create(windowObjec.x + xAdjust,windowObjec.y + yAdjust,Peasant))
    {
        sprite_index = sprite;
        image_index = 1;
        image_speed = 0;
        entrance = windowObjec;
        if(!entrance.isOpen || place_meeting(x, y, Solid)) 
        {
            canEnter = false;
            visible = false;
            spawnX = x;
            spawnY = y;
            x = 0;
            y = 0;
        } 
        else 
        {
            canEnter = true;
        }
    }
    
    alarm[1] = timeBetweenMonsters;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///New Wave
if(!waveOn) {
    alarm[1] = 1 * room_speed;
    alarm[2] = timeOfWave;
    waveOn = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
